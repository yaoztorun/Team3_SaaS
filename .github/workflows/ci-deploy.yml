name: CI + Deploy (Vercel)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # ðŸ§© Step 1: Checkout repo
      - uses: actions/checkout@v4

      # ðŸ§© Step 2: Use Node 20
      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      # ðŸ§© Step 3: Create .env file
      - name: Create .env for build
        run: |
          cat > .env <<EOF
          EXPO_PUBLIC_SUPABASE_URL=${{ secrets.EXPO_PUBLIC_SUPABASE_URL }}
          EXPO_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.EXPO_PUBLIC_SUPABASE_ANON_KEY }}
          EOF

      # ðŸ§© Step 4: Install dependencies
      - name: Install deps
        run: npm ci

      # ðŸ§© Step 5: Build Expo web â†’ dist/
      - name: Build Expo Web
        run: npx expo export --platform web --output-dir dist

      # ðŸ§© Step 6: Copy public assets (PWA manifest, icons, etc.)
      - name: Merge public/ into dist/ (PWA assets)
        if: ${{ hashFiles('public/**') != '' }}
        run: |
          mkdir -p dist
          cp -R public/* dist/ || true

      # ðŸ§© Step 7: Copy manifest.json (if at root)
      - name: Ensure manifest.json in dist/
        if: ${{ hashFiles('manifest.json') != '' && hashFiles('dist/manifest.json') == '' }}
        run: cp manifest.json dist/ || true

      # ðŸ§© Step 8: Copy vercel.json for custom headers (optional)
      - name: Include vercel.json in dist (optional)
        if: ${{ hashFiles('vercel.json') != '' }}
        run: cp vercel.json dist/ || true

      # ðŸ§© Step 9: Install Vercel CLI
      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      # ðŸ§© Step 10: Deploy to Vercel
      - name: Deploy dist/ to Vercel
        id: deploy
        shell: bash
        run: |
          url=$(vercel deploy --prod --token "${{ secrets.VERCEL_TOKEN }}" --cwd dist --yes)
          echo "url=$url" >> "$GITHUB_OUTPUT"

      # ðŸ§© Step 11: Show deployment summary in Actions
      - name: Post deployment URL to summary
        shell: bash
        run: |
          {
            echo "### ðŸš€ Deployment Summary";
            echo "";
            echo "**âœ… Deployed successfully!**";
            echo "";
            echo "**URL:** ${{ steps.deploy.outputs.url }}";
          } >> "$GITHUB_STEP_SUMMARY"

      # ðŸ§© Step 12: Comment URL on PR (optional)
      - name: Comment URL on PR (optional)
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const url = `${{ toJSON(steps.deploy.outputs.url) }}`;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `ðŸš€ Preview deployed: ${url}`
            });
